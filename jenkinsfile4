pipeline {
    agent any
	
    environment {
		DOCKERHUB_CREDENTIALS=credentials('Docker_Hub')
	}
    stages {
        stage('Docker Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('Build & push Dockerfile') {
            steps {
                  sh '''
		       
		        docker stop laravel-container || true
		        docker rm laravel-container || true
		        docker rmi bassam2080/laravel-php || true
		        docker build -t bassam2080/laravel-php .
                        docker compose up -d
		        docker push bassam2080/laravel-php
		        '''
            }
        }

stage('Run Tests') {
            steps {
                script {
                        // Install Composer using the correct PHP path
                    sh 'docker exec laravel-phptest-web-1 curl -sS https://getcomposer.org/installer | /usr/local/bin/php'
                    sh 'docker exec laravel-phptest-web-1 mv composer.phar /usr/local/bin/composer'

                    // Verify Composer installation
                    sh 'docker exec laravel-phptest-web-1 /usr/local/bin/php /usr/local/bin/composer --version'

                    // Install PHPUnit via Composer
                    sh 'docker exec laravel-phptest-web-1 /usr/local/bin/php /usr/local/bin/composer require --dev phpunit/phpunit'

                    // Run PHPUnit tests
                    sh 'docker exec laravel-phptest-web-1 /usr/local/bin/php ./vendor/bin/phpunit --log-junit /var/www/html/tests/report.xml's
                }
            }
        }

        stage('Publish Test Results') {
            steps {
                // Copy test report to Jenkins workspace
                sh 'docker cp laravel-php-web-1:/var/www/html/tests/report.xml ./report.xml'

                // Publish the test results
                junit 'report.xml'
            }
        }
    
  
	      //sh '''
		      //  docker compose down
	               // docker stop laravel-container || true
		       // docker rm laravel-container || true
		      //  docker rmi bassam2080/laravel-php || true
		     //   
                             
		//        '''
        stage('Clean') {
            steps {
             echo "hi"
	  //  sh  'docker compose down'
            }
        }
    }
}
